/**
  @defgroup bts_blockchain Blockchain Library
  @brief Provides abstraction for dealing with TaPOS blockchains.

  The blockchain library provides an abstraction for implementing your own custom DACs build on top of
  a Transactions as Proof-of-Stake blockchain.  

  This library is designed to be extended by adding new output claim types and custom transaction 
  validation logic on top of the basic transactions that are used in all DACs to transfer ownership
  of shares among multiple users. 

  The basic premise behind the design of this library is that there are three types of transactions in
  every block:

  1) Determinstic Transactions - these are transactions that occur automatically every block based 
     upon the state of the blockchain after the prior block.  Examples of deterministic transactions
     include:

      a) Inactivity Fees charged to move outputs forward in the chain.
      b) Market Matching of Bids & Asks
      c) Margin Calls

  2) User Transactions - these are transactions initiated by users and involve signing.

  3) Miner Transactions - these are transactions generated by the miner for the purpose
     of getting paid for destroying coindays.


  A blockchain has two modes of operation, one for testing and the other for live
  operation.   When testing the proof-of-work and timing requirements must be simulated
  so that thousands of blocks can be built and processed rapidly.  


  @section bts_blockchain_timing Blockchain Timining 

  The blockchain attempts to produce one block every 5 minutes by regulating the difficulty of the proof
  of work.  The network assumes all nodes are synchronized by an external NTP server to within a minute
  of eachother.   Based upon this assumption the nodes enforce the following rules on all new blocks:

     1) The block time cannot be more than 1 minute in the future (based upon local time)
     2) The block time must be at least 1 minute after the last block. 

  Given these two rules we can estimate the average block interval by taking the time elapsed for
  the last 100 blocks and dividing by 100.  The goal is to adjust the difficulty such that this
  average stays around 5 minutes.  


*/




